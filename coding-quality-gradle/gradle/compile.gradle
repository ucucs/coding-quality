// Turn on all warnings and errors
tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
    targetCompatibility = rootProject.ext.sourceCompatibilityVersion

    // Show all warnings except boot classpath
    configure(options) {
        compilerArgs << "-Xlint:all"                        // Turn on all warnings
        compilerArgs << "-Xlint:-options"                   // Turn off "missing" bootclasspath warning
        compilerArgs << "-Xlint:-path"                      // Turn off warning - annotation processing
        compilerArgs << "-Xlint:-processing"                // Turn off warning about not claiming annotations
        compilerArgs << "-Werror"                           // Turn warnings into errors
        compilerArgs << "-Xdiags:verbose"                   // Turn on verbose errors
        encoding = "utf-8"
        incremental = true
        fork = true
    }
}

// Turn on logging for all tests, filter to show failures/skips only
tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
        events "failed", "skipped"
    }
}

// Prevent forked processes from stealing focus (on MacOS at least)
tasks.withType(JavaForkOptions) {
    // should improve memory on a 64bit JVM
    jvmArgs "-XX:+UseCompressedOops"
    // should avoid GradleWorkerMain to steal focus
    jvmArgs "-Djava.awt.headless=true"
    jvmArgs "-Dapple.awt.UIElement=true"
}
